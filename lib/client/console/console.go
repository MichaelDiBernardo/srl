package console

import (
	"github.com/MichaelDiBernardo/srl/lib/game"
	"github.com/nsf/termbox-go"
)

// A console client.
type Console struct {
	display display
	curscr  screen
}

// Create a new console client.
func New() *Console {
	display := &tbdisplay{}
	return &Console{
		display: display,
		curscr:  newHudScreen(display),
	}
}

// Init the console client.
func (c *Console) Init() error {
	return c.display.Init()
}

// Render the current screen on this console.
func (c *Console) Render(g *game.Game) {
	c.display.Clear(termbox.ColorDefault, termbox.ColorDefault)
	c.curscr.Render(g)
	c.display.Flush()
}

// Handle an event generated by the game after the last command.
func (c *Console) Handle(ev game.Event) {
	c.curscr.Handle(ev)
}

// Get the next command from the player to be sent to the game instance.
func (c *Console) NextCommand() game.Command {
	return c.curscr.NextCommand()
}

// Tear down the console client.
func (c *Console) Close() {
	c.display.Close()
}
