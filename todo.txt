NEXT:
Afraid:
- [ ] sheet changes [ ] test
- [ ] activeeffect [ ] test

- [ ] display all relevant effects on HUD, fix problem of too many lights



- Monsters have multiple abilities.
    - Abilities need:
        - cooldown
        - function that implements behaviour
        - a predicate that says whether they're applicable or not. (?)
        - Ability to affect transitions on AI. (i.e. if a thief steals
          something, it should flee and not stop until it's dead)
    - Monsters need:
        - Collection of abilities with their probability of using it
        - Do angband-ish thing? One in X chance of using an ability, then
          %chance of each. If no ability available, then move/attack as normal.
- Monsters have multiple attacks.
    - Same idea -- monsters can have multiple attacks to choose from, and when
      they bump into an opponent, they choose.

- Ranged weapons
    - Monsters and the player can shoot.

- Monster AI:
    Types:
        x Wandering
            x Wander (select point, walk towards it, wait a bit, select new one.)
              into
            x Detect & Chase
            x Detection should be based on monster LOS in personality
        x Territorial 
            x Sit still
            x Chase when detected; return home when lose detection 
        - Lazy
            - Sit still
            - Chase when attacked
            - Stay at last position when lose detection
 
Then:
- Monsters drop loot
- Add a basic "you got to level 5 you win"
- Unique items, monsters in gen.c
- Consumables can have duration effects.
- Monster capabilities: Can/can't open doors.

Stuff:
- Consumables stack in inventories.
- Monster pack starting formation and proper pack placement.
- XP spending on skills
- user-level configs for
    - keymaps
    - morgues
    - etc
- Pack AI
- Room variations ("vaults")
- Room decorations
- regen SP

Bugs:

HAX:
- items aren't really using gameobj? They never get placed on a tile, just in an inventory in a tile. They could probably just be their own thing, and make *obj into *actor???
- Actor would have everything it has now
- Item would have Game, Level, (no tile), only have item traits, actor would only have actor traits
- OK, different idea -- maybe "placed on a map" is just merged into Mover, and you always go through Mover to get the tile. Then move Pos and all that crap over to Mover. 
